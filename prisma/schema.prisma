generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("topup77_DATABASE_URL")
}

model users {
  id_user   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String    @unique
  password  String
  username  String
  createdat DateTime? @default(now()) @db.Timestamp(6)
  role      role_user @default(user)
}

model admin {
  id_admin  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String    @unique(map: "unique_email_admin")
  password  String
  username  String
  createdat DateTime? @default(now()) @db.Timestamp(6)
  role      role_user @default(admin)
}

model otp {
  id_otp        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email         String?
  otp           String?
  expireat      DateTime? @db.Timestamp(6)
  createdat     DateTime? @default(now()) @db.Timestamp(6)
  attempt       Int?      @default(0)
  isverified    Boolean?  @default(false)
  cooldownuntil DateTime? @default(now()) @db.Timestamp(6)
}

model games {
  id_game         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String
  image           String?
  createdat       DateTime?  @default(now()) @db.Timestamp(6)
  updatedat       DateTime?  @db.Timestamp(6)
  type            String?    @db.VarChar(10)
  description     String?
  isactive        Boolean?   @default(true)
  is_using_server Boolean?   @default(false)
  ihsangan_slug   String? 
  image_public_id String?
  midtrans        midtrans[]
  packages        packages[]
}

model packages {
  id_packages     String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String
  price           Float
  tag             String?
  gameid          String?    @db.Uuid
  image           String
  createdat       DateTime?  @default(now()) @db.Timestamp(6)
  description     String?
  updatedat       DateTime?  @db.Timestamp(6)
  isactive        Boolean?   @default(true)
  image_public_id String?
  midtrans        midtrans[]
  games           games?     @relation(fields: [gameid], references: [id_game], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model midtrans {
  id_payment    String    @id(map: "payments_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id      String    @unique(map: "payments_order_id_key")
  useremail     String
  paymentmethod String
  gameid        String?   @db.Uuid
  packageid     String?   @db.Uuid
  amount        Float
  status        String?   @default("pending")
  createdat     DateTime? @default(now()) @db.Timestamp(6)
  updatedat     DateTime? @db.Timestamp(6)
  redirecturl   String
  games         games?    @relation(fields: [gameid], references: [id_game], onDelete: Cascade, onUpdate: NoAction, map: "payments_gameid_fkey")
  packages      packages? @relation(fields: [packageid], references: [id_packages], onDelete: Cascade, onUpdate: NoAction, map: "payments_packageid_fkey")
}

model transactions {
  order_id     String    @id @db.VarChar(100)
  email        String    @db.VarChar(255)
  id_packages  String    @db.VarChar(50)
  gross_amount Int
  status       String?   @default("pending") @db.VarChar(50)
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  updated_at   DateTime? @db.Timestamp(6)
}

enum role_user {
  admin
  user
}
